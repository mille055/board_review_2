# Send nginx logs to Docker so you can see them in `docker logs`
error_log /dev/stderr info;
access_log /dev/stdout;

server {
  listen 8080;
  server_name _;

  # Serve the built frontend
  root /usr/share/nginx/html;
  index index.html;

  # MIME map (ensures text/html, text/css, application/javascript, video/mp4, etc.)
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # Basic security-ish headers
  add_header X-Content-Type-Options nosniff always;
  add_header Referrer-Policy no-referrer-when-downgrade always;

  # Permissive CORS for local/dev (tighten later)
  add_header Access-Control-Allow-Origin * always;
  add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
  add_header Access-Control-Allow-Headers "Range, If-Range, Origin, Content-Type, Accept, Authorization, X-API-KEY, x-api-key" always;

  location = /js/config.js {
  add_header Cache-Control "no-store";
  }

  # ---------- API (proxy to FastAPI on :9000) ----------
  location /api/ {
    # Handle preflight here to avoid 405s
    if ($request_method = OPTIONS) {
      add_header Content-Length 0;
      add_header Content-Type text/plain;
      return 204;
    }

    proxy_pass              http://127.0.0.1:9000;
    proxy_http_version      1.1;
    proxy_set_header        Host              $host;
    proxy_set_header        X-Real-IP         $remote_addr;
    proxy_set_header        X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
  }

  # ---------- Static frontend ----------
  # SPA routing: fall back to index.html
  location / {
    # Handle OPTIONS for root as well (harmless)
    if ($request_method = OPTIONS) {
      add_header Content-Length 0;
      add_header Content-Type text/plain;
      return 204;
    }
    try_files $uri $uri/ /index.html;
  }

  # Media: long cache
  location ~* \.(?:mp4|webm|ogg|ogv|jpg|jpeg|png|gif|svg)$ {
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
  }

  # JS/CSS: moderate cache
  location ~* \.(?:js|css)$ {
    add_header Cache-Control "public, max-age=604800";
    try_files $uri =404;
  }

  # index.html: no cache so deploys take effect immediately
  location = /index.html {
    add_header Cache-Control "no-store";
  }

  # Health for the container/orchestrator
  location = /healthz {
    add_header Content-Type text/plain;
    return 200 "ok";
  }
}
